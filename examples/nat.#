def nat:Type = t:Type -> (t->t) -> (t->t)
def 0:nat = fun t f x => x
def S:(nat -> nat) = fun n t f x => f (n t f x)
def 1:nat = S 0
def 2 = S (S 0)
def 3 = S (S (S 0))
def nat_ind = P:(nat -> Type) -> (P 0) -> (n:nat -> (P nat) -> (P (S n))) -> n:nat -> (P n)
def sum:(nat -> nat -> nat) = fun m n t f x => m t f (n t f x)
def prod:(nat->nat->nat) = fun m n t f x => m t (n t f) x
def 5 = sum 2 3
def 10 = prod 2 5
